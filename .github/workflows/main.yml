# Simplified Deployment Workflow for Local Unity Builds
name: Deploy Pre-Built Unity WebGL to GitHub Pages

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Build Directory
        run: |
          echo "🔍 Checking for Unity WebGL build files..."
          
          if [ -d "Build" ]; then
            echo "✅ Build directory found"
            echo "📁 Contents:"
            ls -la Build/
            
            # Verify essential Unity WebGL files exist
            REQUIRED_FILES=("index.html")
            WEBGL_EXTENSIONS=(".wasm" ".data" ".loader.js" ".framework.js")
            
            for file in "${REQUIRED_FILES[@]}"; do
              if [ ! -f "$file" ]; then
                echo "❌ Missing required file: $file"
                exit 1
              fi
            done
            
            # Check for WebGL build files
            WEBGL_FILES_FOUND=false
            for ext in "${WEBGL_EXTENSIONS[@]}"; do
              if ls Build/*${ext} 1> /dev/null 2>&1; then
                WEBGL_FILES_FOUND=true
                break
              fi
            done
            
            if [ "$WEBGL_FILES_FOUND" = true ]; then
              echo "✅ Unity WebGL build files detected"
            else
              echo "❌ No Unity WebGL build files found in Build directory"
              exit 1
            fi
          else
            echo "❌ Build directory not found"
            echo "💡 This workflow expects a local Unity build to be committed to this repository"
            exit 1
          fi

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Register with Unreality3D Load Balancer
        run: |
          echo "🔗 Registering professional URL with Unreality3D..."
          
          # Extract repository info
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"
          GITHUB_PAGES_URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/"
          
          # Call your Firebase function to register the professional URL
          curl -X POST "https://us-central1-unreality3d.cloudfunctions.net/registerProfessionalURL" \
            -H "Content-Type: application/json" \
            -d "{
              \"repoOwner\": \"${REPO_OWNER}\",
              \"repoName\": \"${REPO_NAME}\",
              \"githubPagesUrl\": \"${GITHUB_PAGES_URL}\"
            }"
          
          echo "✅ Professional URL registration requested"

      - name: Output Success Information
        run: |
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"
          
          echo "## 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**GitHub Pages URL:** https://${REPO_OWNER}.github.io/${REPO_NAME}/" >> $GITHUB_STEP_SUMMARY
          echo "**Professional URL:** https://${REPO_OWNER}.unreality3d.com/${REPO_NAME}/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### What happened:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Your pre-built Unity WebGL project was deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Professional URL was registered with Unreality3D Load Balancer" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Your content is now live and accessible worldwide" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎮 **Your game is ready to share!**"